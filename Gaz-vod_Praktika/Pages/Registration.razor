@page "/registration"
<PageTitle>User Registration</PageTitle>
@inject NavigationManager navManager
@inject SingletonServise singleton

  <style>
   p.Message {
    background: #D9FFAD; 
    color: green;
    padding: 2px;
   }
   p.Kind{
		padding: 10px;
   }
  </style>

<h3>Registration</h3>
<div><p class="Message">@Message</p></div>
	<p>
		Login
		<input  type="text" name="login" @bind-value="@Login" />
	</p>
	<p>
		Password
		<input  type="password" @bind-value="@Password" />
	</p>
	<p>
		Password confirmation
		<input  type="password" @bind-value="@PasswordConfirmation" />
	</p>
	<p>
	Email example: example@mail.ru
	<input  type="text" @bind-value="@Email" />
	</p>
	<p>
		FName
		<input  type="text" @bind-value="@FName" />
	</p>
	<p>
		LName
		<input  type="text" @bind-value="@LName" />
	</p>
	<p>
		Patronymic
		<input type="text" @bind-value="@Patronymic" />
	</p>
	<p>
	Phone example: +79196248721 or 89196248721 
	<input type="text" @bind-value="@Phone" />
	</p>
<p>

</p>
		<p>
	<select class="form-control" @bind = "KindOfUser">
	<option value="Customer">Customer</option>
		<option value="Designer">Designer</option>
		<option value="Builder">Builder</option>
		</select>
	
</p>
<p><button class="btn btn-primary" onclick="@CreateUser">Create Customer</button></p>

	<button class="btn btn-primary" @onclick="Authorization">Sign in</button>


@code {
	private string Login = "";
	private string Password = "";
	private string PasswordConfirmation = "";
	private string Email = "";
	private string FName ="";
	private string LName = "";
	private string Patronymic = "";
	private string Phone = "";
	private string Message = "";
	private string KindOfUser = "";
	private void CreateUser()
	{

		if (Login != "" && Email != "" && FName != "" && LName != "" && Password != "" && PasswordConfirmation != "" && Patronymic != "" && Phone != ""&& KindOfUser != "")
		{
			if(Check())
			{
				if (!IsNumber(LName) && !IsNumber(FName) && !IsNumber(Patronymic))
				{
					if (MongoDb.FindUser(Login) == null)
					{
						if (Password == PasswordConfirmation)
						{
							User user = new User(Login, Password, FName, LName, Patronymic, Phone, Email);
							switch (KindOfUser)
							{
								case ("Customer"):
									user = new Customer(Login, Password, FName, LName, Patronymic, Phone, Email, "", "");
									break;
								case ("Designer"):
									user = new Designer(Login, Password, FName, LName, Patronymic, Phone, Email, "", "", "", "", "", "");
									break;
								case ("Builder"):
									user = new Builder(Login, Password, FName, LName, Patronymic, Phone, Email, "", "", "", "", "");
									break;
							}
							MongoDb.AddToDBUser(user);
							singleton.SetUser(user);
							navManager.NavigateTo("personalAccount");
						}
						else
						{
							Message = "Passwords do not match";
						}
					}
					else
					{
						Message = "Login already";
					}
				}
				else
				{
					Message = "Initials cannot contain numbers";
				}
			}
			else{
				Message = "Email or Phone incorect";
			}


		}
		else
		{
			Message = "Not all fields are filled.";
		}

	}
	private void Authorization()
	{
		navManager.NavigateTo("authorization");
	}
	private bool Check()
	{
		bool cnt = false;
		if (IsValidEmail(Email))
		{
			if (Phone[0] == '+' && Phone[1] == '7' && Phone.Length == 12 || Phone[0] == '8' && Phone.Length == 11)
			{
				string pho = Phone;
				try
				{
					pho = Phone.Remove('+');
				}
				catch { }
				cnt = IsNumber(pho);
			}

		}
		return cnt;


	}
	private bool IsEmail()
	{
		try
		{
			var addr = new System.Net.Mail.MailAddress(Email);
			return true;
		}
		catch
		{
			return false;
		}
	}

	private bool IsNumber(string value)
	{
		foreach (var i in value)
		{
			if (i >= '0' && i <= '9')
			{
				//Есть число
				return true;
			}

		}
		return false;
	}
	
	public bool IsValidEmail(string email)
	{
	string pattern = @"^[-a-zA-Z0-9][-.a-zA-Z0-9]*@[-.a-zA-Z0-9]+(\.[-.a-zA-Z0-9]+)*\.
    (com|edu|info|gov|int|mil|net|org|biz|name|museum|coop|aero|pro|tv|[a-zA-Z]{2})$";

	Regex check = new Regex(pattern, RegexOptions.IgnorePatternWhitespace);
	bool valid = false;

	if (string.IsNullOrEmpty(email)) valid = false;
	else valid = check.IsMatch(email);

	return valid;
	}
}

